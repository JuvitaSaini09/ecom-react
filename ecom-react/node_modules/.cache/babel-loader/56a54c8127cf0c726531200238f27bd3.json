{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dell\\\\Documents\\\\GitHub\\\\ecom-react\\\\ecom-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { Server, Model, RestSerializer } from \"miragejs\";\nimport { loginHandler, signupHandler } from \"./backend/controllers/AuthController\";\nimport { addItemToCartHandler, getCartItemsHandler, removeItemFromCartHandler, updateCartItemHandler } from \"./backend/controllers/CartController\";\nimport { getAllCategoriesHandler, getCategoryHandler } from \"./backend/controllers/CategoryController\";\nimport { getAllProductsHandler, getProductHandler } from \"./backend/controllers/ProductController\";\nimport { addItemToWishlistHandler, getWishlistItemsHandler, removeItemFromWishlistHandler } from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\nexport function makeServer() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$environment = _ref.environment,\n      environment = _ref$environment === void 0 ? \"development\" : _ref$environment;\n\n  return new Server({\n    serializers: {\n      application: RestSerializer\n    },\n    environment: environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model\n    },\n    // Runs on the start of the server\n    seeds: function seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach(function (item) {\n        server.create(\"product\", _objectSpread({}, item));\n      });\n      users.forEach(function (item) {\n        return server.create(\"user\", _objectSpread({}, item, {\n          cart: [],\n          wishlist: []\n        }));\n      });\n      categories.forEach(function (item) {\n        return server.create(\"category\", _objectSpread({}, item));\n      });\n    },\n    routes: function routes() {\n      this.namespace = \"api\"; // auth routes (public)\n\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this)); // products routes (public)\n\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this)); // categories routes (public)\n\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this)); // cart routes (private)\n\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\"/user/cart/:productId\", removeItemFromCartHandler.bind(this)); // wishlist routes (private)\n\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\"/user/wishlist/:productId\", removeItemFromWishlistHandler.bind(this));\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/dell/Documents/GitHub/ecom-react/ecom-react/src/server.js"],"names":["Server","Model","RestSerializer","loginHandler","signupHandler","addItemToCartHandler","getCartItemsHandler","removeItemFromCartHandler","updateCartItemHandler","getAllCategoriesHandler","getCategoryHandler","getAllProductsHandler","getProductHandler","addItemToWishlistHandler","getWishlistItemsHandler","removeItemFromWishlistHandler","categories","products","users","makeServer","environment","serializers","application","models","product","category","user","cart","wishlist","seeds","server","logging","forEach","item","create","routes","namespace","post","bind","get","delete"],"mappings":"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","sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\";\r\nimport {\r\n  loginHandler,\r\n  signupHandler,\r\n} from \"./backend/controllers/AuthController\";\r\nimport {\r\n  addItemToCartHandler,\r\n  getCartItemsHandler,\r\n  removeItemFromCartHandler,\r\n  updateCartItemHandler,\r\n} from \"./backend/controllers/CartController\";\r\nimport {\r\n  getAllCategoriesHandler,\r\n  getCategoryHandler,\r\n} from \"./backend/controllers/CategoryController\";\r\nimport {\r\n  getAllProductsHandler,\r\n  getProductHandler,\r\n} from \"./backend/controllers/ProductController\";\r\nimport {\r\n  addItemToWishlistHandler,\r\n  getWishlistItemsHandler,\r\n  removeItemFromWishlistHandler,\r\n} from \"./backend/controllers/WishlistController\";\r\nimport { categories } from \"./backend/db/categories\";\r\nimport { products } from \"./backend/db/products\";\r\nimport { users } from \"./backend/db/users\";\r\n\r\nexport function makeServer({ environment = \"development\" } = {}) {\r\n  return new Server({\r\n    serializers: {\r\n      application: RestSerializer,\r\n    },\r\n    environment,\r\n    models: {\r\n      product: Model,\r\n      category: Model,\r\n      user: Model,\r\n      cart: Model,\r\n      wishlist: Model,\r\n    },\r\n\r\n    // Runs on the start of the server\r\n    seeds(server) {\r\n      // disballing console logs from Mirage\r\n      server.logging = false;\r\n      products.forEach((item) => {\r\n        server.create(\"product\", { ...item });\r\n      });\r\n\r\n      users.forEach((item) =>\r\n        server.create(\"user\", { ...item, cart: [], wishlist: [] })\r\n      );\r\n\r\n      categories.forEach((item) => server.create(\"category\", { ...item }));\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = \"api\";\r\n      // auth routes (public)\r\n      this.post(\"/auth/signup\", signupHandler.bind(this));\r\n      this.post(\"/auth/login\", loginHandler.bind(this));\r\n\r\n      // products routes (public)\r\n      this.get(\"/products\", getAllProductsHandler.bind(this));\r\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\r\n\r\n      // categories routes (public)\r\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\r\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\r\n\r\n      // cart routes (private)\r\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\r\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\r\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\r\n      this.delete(\r\n        \"/user/cart/:productId\",\r\n        removeItemFromCartHandler.bind(this)\r\n      );\r\n\r\n      // wishlist routes (private)\r\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\r\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\r\n      this.delete(\r\n        \"/user/wishlist/:productId\",\r\n        removeItemFromWishlistHandler.bind(this)\r\n      );\r\n    },\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}